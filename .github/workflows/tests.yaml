name: Tests
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  tests:
    permissions:
      checks: write
      pull-requests: write
    strategy:
      matrix:
        test-scripts:
          - 'test'
          - 'test:e2e'
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: playground
        ports:
          - '13306:3306'
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: mysql://root:@localhost:13306/playground
      CACHE_DIR: ${{ github.workspace }}/cache
    steps:
      # Colon cannot be used in the artifact name, so replace the colon and set the artifact name to output.
      #- name: Set coverage report artifact name
      #  id: set-coverage-report-artifact-name
      #  run: |
      #    test=${{ matrix.test-scripts }}
      #    echo "COVERAGE_REPORT_ARTIFACT_NAME=${test//:/_}" >> "$GITHUB_OUTPUT"

      - uses: actions/cache/restore@v4
        id: restore-cache
        with:
          name: ${{ matrix.test-scripts }}-coverage-report
          path: env.CACHE_DIR

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Prisma deploy
        run: npx prisma migrate deploy

      - name: Run tests
        run: npm run ${{ matrix.test-scripts }} -- --ci --json --coverage --testLocationInResults --outputFile=report.json

      - uses: ArtiomTr/jest-coverage-report-action@v2
        if: github.event_name == 'pull_request'
        with:
          skip-step: all
          custom-title: Coverage Report (${{ matrix.test-scripts }})
          coverage-file: report.json
          base-coverage-file: ${{ github.workspace }}/cache/report.json

      - name: Move coverage report for cache
        #if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        if: github.event_name == 'pull_request'
        run: mv report.json ${{ env.CACHE_DIR }}

      - uses: actions/cache/save@v4
        #if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        if: github.event_name == 'pull_request'
        with:
          name: ${{ matrix.test-scripts }}-coverage-report
          path: ${{ env.CACHE_DIR }}
